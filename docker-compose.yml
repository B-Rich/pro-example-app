version: '2'
services:
  assets:
    build:
      context: .
      dockerfile: ./Dockerfile.assets
    volumes:
      - .:/pro
      - /pro/node_modules
    ports:
      - "8080:8080"
    working_dir: /pro/framework/tools/bundler/webpack
    command: npm run webpack-server

  bus:
    build: framework/tools/bus/disque
    environment: &disque_env
      disque_host: bus
      disque_port: 7711
    command: disque-server
    ports:
      - "7711:7711"

  communication_input:
    build: framework/tools/communication/primus
    environment: *disque_env
    command: coffee entry.coffee
    volumes:
      - ./framework/tools/communication/primus:/primus
      - /primus/node_modules
    ports:
      - "8090:8090"

  communication_output:
    build: framework/tools/communication/primus
    environment: *disque_env
    command: coffee outgo.coffee
    volumes:
      - ./framework/tools/communication/primus:/primus
      - /primus/node_modules
    ports:
      - "8091:8091"

  db:
    build: framework/tools/db/postgres
    environment: &postgres_env
      APP: pro
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: pro
      POSTGRES_PASSWORD: pro

  db_admin:
    build: framework/tools/db/postgres/admin
    environment: *postgres_env
    command: php -S 0.0.0.0:8000 -t /db_admin
    ports:
      - "8000:8000"
    depends_on:
      - db

  static:
    build:
      context: .
      dockerfile: ./Dockerfile.static
    command: lighttpd -D -f /pro/framework/tools/static/lighttpd/lightppd.conf
    volumes:
      - .:/pro
    ports:
      - "3000:3000"

  web:
    build: .
    environment: *postgres_env
    command: bash framework/tools/starter/docker-up.sh
    volumes:
      - .:/pro
    depends_on:
      - assets
      - communication_input
      - communication_output
      - bus
      - db
      - static
